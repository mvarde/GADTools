import maya.cmds as cmds
#Imports Maya commands

global rb1
global rb2
global rb3
global rb1value
global rb2value
global rb3value
#Sets up global variables to be used throughout the entire script
 
def radioButtonOne(*args):
    selection = cmds.ls(sl=True)
    for selected in selection:
             
        rb1value = cmds.radioButton("rb1", query=True, select=True)
#Defines what will happen if radioButtonOne is selected
    
        if rb1value == True:
            cmds.setAttr("place2dTexture1.repeatU", 0.5)
            cmds.setAttr("place2dTexture1.repeatV", 0.5)
#The texture will tile 0.5 times
    
def radioButtonTwo(*args):
    selection = cmds.ls(sl=True)
    for selected in selection:
        
        rb2value = cmds.radioButton("rb2", query=True, select=True)
#Defines what will happen if radioButtonTwo is selected

        if rb2value == True:
            cmds.setAttr("place2dTexture1.repeatU", 2)
            cmds.setAttr("place2dTexture1.repeatV", 2)
#The texture will tile 2 times
    
def radioButtonThree(*args):
    selection = cmds.ls(sl=True)
    for selected in selection:
        
        rb3value = cmds.radioButton("rb3", query=True, select=True)
#Defines what will happen if radioButtonThree is selected
    
        if rb3value == True:
            cmds.setAttr("place2dTexture1.repeatU", 4)
            cmds.setAttr("place2dTexture1.repeatV", 4)
#The texture will tile 4 times

def my_UI():
#Create UI info
     
    window_name = "controlsWindow"
    if cmds.window(window_name, q=True, exists=True):
        cmds.deleteUI(window_name)
#If the window is already exists, delete it
        
    my_window = cmds.window(window_name, title="Texel Density Editor")
    my_layout = cmds.columnLayout(parent=my_window, adj=True)
#Creates the window title and starts the layout
    
    cmds.text(label="")
    cmds.text(label="Make sure your test texture size is 512 before you begin")
    cmds.text(label="")
#Creates text and blank spaces in window
    
    collection = cmds.radioCollection()
    collection_layout = cmds.rowLayout(numberOfColumns = 4)
    cmds.text(label = "                                 Final Texture Size ", p=collection_layout)
    cmds.radioButton("rb1", label="256", p=collection_layout, cc=radioButtonOne)
    cmds.radioButton("rb2", label="1024", p=collection_layout, cc=radioButtonTwo)
    cmds.radioButton("rb3", label="2048", p=collection_layout, cc=radioButtonThree)
#Creates a radio button collection, names them, and shows what function they control
    
    cmds.showWindow(my_window)
#Show the window

my_UI()
#End UI
